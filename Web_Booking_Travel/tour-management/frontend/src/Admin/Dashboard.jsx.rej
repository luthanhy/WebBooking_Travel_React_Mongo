diff a/Web_Booking_Travel/tour-management/frontend/src/Admin/Dashboard.jsx b/Web_Booking_Travel/tour-management/frontend/src/Admin/Dashboard.jsx	(rejected hunks)
@@ -1,134 +0,80 @@
-import React from 'react'
-import 
-{ BsFillArchiveFill, BsFillGrid3X3GapFill, BsPeopleFill, BsFillBellFill}
- from 'react-icons/bs'
- import 
- { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line } 
- from 'recharts';
-import '../styles/admin.css'
-function Dashboard() {
+import React, { useEffect, useState, useContext } from 'react';
+import { BsFillArchiveFill, BsPeopleFill } from 'react-icons/bs';
+import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, LineChart, Line } from 'recharts';
+import axios from 'axios';
+import '../styles/admin.css'; // Ensure you have corresponding styles
+import { BASE_URL } from '../utils/config';
+import { DarkModeContext } from '../context/DarkModeContext';
 
-    const data = [
-        {
-          name: 'Page A',
-          uv: 4000,
-          pv: 2400,
-          amt: 2400,
-        },
-        {
-          name: 'Page B',
-          uv: 3000,
-          pv: 1398,
-          amt: 2210,
-        },
-        {
-          name: 'Page C',
-          uv: 2000,
-          pv: 9800,
-          amt: 2290,
-        },
-        {
-          name: 'Page D',
-          uv: 2780,
-          pv: 3908,
-          amt: 2000,
-        },
-        {
-          name: 'Page E',
-          uv: 1890,
-          pv: 4800,
-          amt: 2181,
-        },
-        {
-          name: 'Page F',
-          uv: 2390,
-          pv: 3800,
-          amt: 2500,
-        },
-        {
-          name: 'Page G',
-          uv: 3490,
-          pv: 4300,
-          amt: 2100,
-        },
-      ];
-     
+const Dashboard = () => {
+  const { state } = useContext(DarkModeContext);
+  const [userCount, setUserCount] = useState(0);
+  const [tourCount, setTourCount] = useState(0);
+  const [data, setData] = useState([
+    // Sample data for the charts
+  ]);
 
-  return (
-    <main className='admin-main-container'>
+  useEffect(() => {
+    const fetchCounts = async () => {
+      try {
+        const userRes = await axios.get(`${BASE_URL}/dashboard/userCount`);
+        setUserCount(userRes.data.count);
+        const tourRes = await axios.get(`${BASE_URL}/dashboard/tourCount`);
+        setTourCount(tourRes.data.count);
+      } catch (err) {
+        console.error('Error fetching counts:', err);
+      }
+    };
 
-        <div className='admin-main-cards'>
-            <div className='admin-card'>
-                <div className='admin-card-inner'>
-                    <h3>TOURS</h3>
-                    <BsFillArchiveFill className='admin-card_icon'/>
-                </div>
-                <h1>300</h1>
-            </div>
-            <div className='admin-card'>
-                <div className='admin-card-inner'>
-                    <h3>CATEGORIES</h3>
-                    <BsFillGrid3X3GapFill className='admin-card_icon'/>
-                </div>
-                <h1>12</h1>
-            </div>
-            <div className='admin-card'>
-                <div className='admin-card-inner'>
-                    <h3>CUSTOMERS</h3>
-                    <BsPeopleFill className='admin-card_icon'/>
-                </div>
-                <h1>33</h1>
-            </div>
-        </div>
+    fetchCounts();
+  }, []);
 
-        <div className='admin-charts'>
-            <ResponsiveContainer>
-            <BarChart
-            width={500}
-            height={300}
-            data={data}
-            margin={{
-                top: 5,
-                right: 30,
-                left: 20,
-                bottom: 5,
-            }}
-            >
-                <CartesianGrid strokeDasharray="3 3" />
-                <XAxis dataKey="name" />
-                <YAxis />
-                <Tooltip />
-                <Legend />
-                <Bar dataKey="pv" fill="#8884d8" />
-                <Bar dataKey="uv" fill="#82ca9d" />
-                </BarChart>
-            </ResponsiveContainer>
+  return (
+    <main className={`admin-main-container ${state.darkMode ? 'dark' : ''}`}>
+      <div className='admin-main-cards'>
+        <div className='admin-card'>
+          <div className='admin-card-inner'>
+            <h3>USERS</h3>
+            <BsPeopleFill className='admin-card_icon' />
+          </div>
+          <h1>{userCount}</h1>
+        </div>
+        <div className='admin-card'>
+          <div className='admin-card-inner'>
+            <h3>TOURS</h3>
+            <BsFillArchiveFill className='admin-card_icon' />
+          </div>
+          <h1>{tourCount}</h1>
+        </div>
+      </div>
 
-            <ResponsiveContainer>
-                <LineChart
-                width={500}
-                height={300}
-                data={data}
-                margin={{
-                    top: 5,
-                    right: 30,
-                    left: 20,
-                    bottom: 5,
-                }}
-                >
-                <CartesianGrid strokeDasharray="3 3" />
-                <XAxis dataKey="name" />
-                <YAxis />
-                <Tooltip />
-                <Legend />
-                <Line type="monotone" dataKey="pv" stroke="#8884d8" activeDot={{ r: 8 }} />
-                <Line type="monotone" dataKey="uv" stroke="#82ca9d" />
-                </LineChart>
-            </ResponsiveContainer>
+      <div className='admin-charts'>
+        <ResponsiveContainer width="100%" height={300}>
+          <BarChart data={data}>
+            <CartesianGrid strokeDasharray="3 3" />
+            <XAxis dataKey="name" />
+            <YAxis />
+            <Tooltip />
+            <Legend />
+            <Bar dataKey="pv" fill="#8884d8" />
+            <Bar dataKey="uv" fill="#82ca9d" />
+          </BarChart>
+        </ResponsiveContainer>
 
-        </div>
+        <ResponsiveContainer width="100%" height={300}>
+          <LineChart data={data}>
+            <CartesianGrid strokeDasharray="3 3" />
+            <XAxis dataKey="name" />
+            <YAxis />
+            <Tooltip />
+            <Legend />
+            <Line type="monotone" dataKey="pv" stroke="#8884d8" activeDot={{ r: 8 }} />
+            <Line type="monotone" dataKey="uv" stroke="#82ca9d" />
+          </LineChart>
+        </ResponsiveContainer>
+      </div>
     </main>
-  )
-}
+  );
+};
 
-export default Dashboard
\ No newline at end of file
+export default Dashboard;
